version: '3.8'

services:
  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # Main RabbitMQ port
      - "15672:15672" # Management console
    networks:
      - app-network

  # MySQL service for producer
  mysql-producer:
    image: mysql:8
    container_name: mysql-producer
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: producer_db
    ports:
      - "3307:3306"
    networks:
      - app-network

  # MySQL service for consumer1
  mysql-consumer1:
    image: mysql:8
    container_name: mysql-consumer1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: consumer1_db
    ports:
      - "3308:3306"
    networks:
      - app-network

  # MySQL service for consumer2
  mysql-consumer2:
    image: mysql:8
    container_name: mysql-consumer2
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: consumer2_db
    ports:
      - "3309:3306"
    networks:
      - app-network

  # MySQL service for consumer3
  mysql-consumer3:
    image: mysql:8
    container_name: mysql-consumer3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: consumer3_db
    ports:
      - "3310:3306"
    networks:
      - app-network

  # Producer microservice
  producer:
    build: 
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      - rabbitmq
      - mysql-producer
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-producer:3306/producer_db?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
    ports:
      - "8075:8075"
    networks:
      - app-network

  # Consumer1 microservice
  consumer1:
    build:
      context: ./consumer1
      dockerfile: Dockerfile
    container_name: consumer1
    depends_on:
      - rabbitmq
      - mysql-consumer1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-consumer1:3306/consumer1_db?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
      SERVER_PORT: 8091
    ports:
      - "8091:8091"
    networks:
      - app-network

  # Consumer2 microservice
  consumer2:
    build:
      context: ./consumer2
      dockerfile: Dockerfile
    container_name: consumer2
    depends_on:
      - rabbitmq
      - mysql-consumer2
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-consumer2:3306/consumer2_db?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
      SERVER_PORT: 8092
    ports:
      - "8092:8092"
    networks:
      - app-network

  # Consumer3 microservice
  consumer3:
    build:
      context: ./consumer3
      dockerfile: Dockerfile
    container_name: consumer3
    depends_on:
      - rabbitmq
      - mysql-consumer3
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-consumer3:3306/consumer3_db?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
      SERVER_PORT: 8093
    ports:
      - "8093:8093"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
